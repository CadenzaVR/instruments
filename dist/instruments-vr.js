!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){function o(e){e.keys().forEach(e)}n(1),n(2),o(n(3)),o(n(5)),n(7)},function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("haptics",{dependencies:["tracked-controls"],schema:{actuatorIndex:{default:0},dur:{default:100},enabled:{default:!0},events:{type:"array"},eventsFrom:{type:"string"},force:{default:1}},multiple:!0,init:function(){this.data;var e=this;if(this.callPulse=function(){e.pulse()},this.el.components["tracked-controls"].controller){if(this.gamepad=this.el.components["tracked-controls"].controller,this.gamepad.gamepad&&(this.gamepad=this.gamepad.gamepad),!this.gamepad||!this.gamepad.hapticActuators||!this.gamepad.hapticActuators.length)return;this.addEventListeners()}else this.el.addEventListener("controllerconnected",(function(){setTimeout((function(){e.gamepad=e.el.components["tracked-controls"].controller,e.gamepad.gamepad&&(e.gamepad=e.gamepad.gamepad),e.gamepad&&e.gamepad.hapticActuators&&e.gamepad.hapticActuators.length&&e.addEventListeners()}),150)}))},remove:function(){this.removeEventListeners()},pulse:function(e,t){var n=this.data;n.enabled&&this.gamepad&&this.gamepad.hapticActuators&&this.gamepad.hapticActuators[n.actuatorIndex].pulse(e||n.force,t||n.dur)},addEventListeners:function(){var e,t,n=this.data;for(t=n.eventsFrom?document.querySelector(n.eventsFrom):this.el,e=0;e<n.events.length;e++)t.addEventListener(n.events[e],this.callPulse)},removeEventListeners:function(){var e,t,n=this.data;for(t=n.eventsFrom?document.querySelector(n.eventsFrom):this.el,e=0;e<n.events.length;e++)t.removeEventListener(n.events[e],this.callPulse)}})},function(e,t){!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.m=e,n.c=t,n.p="",n(0)}([function(e,t,n){var o=n(1),i=n(2);AFRAME.registerShader("sunSky",{schema:{luminance:{default:1,max:0,min:2,is:"uniform"},mieCoefficient:{default:.005,min:0,max:.1,is:"uniform"},mieDirectionalG:{default:.8,min:0,max:1,is:"uniform"},reileigh:{default:1,max:0,min:4,is:"uniform"},sunPosition:{type:"vec3",default:"0 0 -1",is:"uniform"},turbidity:{default:2,max:0,min:20,is:"uniform"}},vertexShader:o,fragmentShader:i}),AFRAME.registerPrimitive("a-sun-sky",{defaultComponents:{geometry:{primitive:"sphere",radius:5e3,segmentsWidth:64,segmentsHeight:20},material:{shader:"sunSky"},scale:"-1 1 1"},mappings:{luminance:"material.luminance",mieCoefficient:"material.mieCoefficient",mieDirectionalG:"material.mieDirectionalG",reileigh:"material.reileigh",sunPosition:"material.sunPosition",turbidity:"material.turbidity"}})},function(e,t){e.exports="varying vec3 vWorldPosition;\n\nvoid main() {\n  vec4 worldPosition = modelMatrix * vec4(position, 1.0);\n  vWorldPosition = worldPosition.xyz;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"},function(e,t){e.exports="uniform sampler2D skySampler;\nuniform vec3 sunPosition;\nvarying vec3 vWorldPosition;\n\nvec3 cameraPos = vec3(0., 0., 0.);\n\nuniform float luminance;\nuniform float turbidity;\nuniform float reileigh;\nuniform float mieCoefficient;\nuniform float mieDirectionalG;\n\n// constants for atmospheric scattering\nconst float e = 2.71828182845904523536028747135266249775724709369995957;\nconst float pi = 3.141592653589793238462643383279502884197169;\n\nconst float n = 1.0003; // refractive index of air\nconst float N = 2.545E25; // number of molecules per unit volume for air at\n// 288.15K and 1013mb (sea level -45 celsius)\nconst float pn = 0.035;  // depolatization factor for standard air\n\n// wavelength of used primaries, according to preetham\nconst vec3 lambda = vec3(680E-9, 550E-9, 450E-9);\n\n// mie stuff\n// K coefficient for the primaries\nconst vec3 K = vec3(0.686, 0.678, 0.666);\nconst float v = 4.0;\n\n// optical length at zenith for molecules\nconst float rayleighZenithLength = 8.4E3;\nconst float mieZenithLength = 1.25E3;\nconst vec3 up = vec3(0.0, 1.0, 0.0);\n\nconst float EE = 1000.0;\nconst float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\n// 66 arc seconds -> degrees, and the cosine of that\n\n// earth shadow hack\nconst float cutoffAngle = pi/1.95;\nconst float steepness = 1.5;\n\nvec3 totalRayleigh(vec3 lambda)\n{\n  return (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn));\n}\n\n// see http://blenderartists.org/forum/showthread.php?321110-Shaders-and-Skybox-madness\n// A simplied version of the total Rayleigh scattering to works on browsers that use ANGLE\nvec3 simplifiedRayleigh()\n{\n  return 0.0005 / vec3(94, 40, 18);\n}\n\nfloat rayleighPhase(float cosTheta)\n{\n  return (3.0 / (16.0*pi)) * (1.0 + pow(cosTheta, 2.0));\n}\n\nvec3 totalMie(vec3 lambda, vec3 K, float T)\n{\n  float c = (0.2 * T ) * 10E-18;\n  return 0.434 * c * pi * pow((2.0 * pi) / lambda, vec3(v - 2.0)) * K;\n}\n\nfloat hgPhase(float cosTheta, float g)\n{\n  return (1.0 / (4.0*pi)) * ((1.0 - pow(g, 2.0)) / pow(1.0 - 2.0*g*cosTheta + pow(g, 2.0), 1.5));\n}\n\nfloat sunIntensity(float zenithAngleCos)\n{\n  return EE * max(0.0, 1.0 - exp(-((cutoffAngle - acos(zenithAngleCos))/steepness)));\n}\n\n// Filmic ToneMapping http://filmicgames.com/archives/75\nfloat A = 0.15;\nfloat B = 0.50;\nfloat C = 0.10;\nfloat D = 0.20;\nfloat E = 0.02;\nfloat F = 0.30;\nfloat W = 1000.0;\n\nvec3 Uncharted2Tonemap(vec3 x)\n{\n   return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n}\n\nvoid main()\n{\n  float sunfade = 1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);\n\n  float reileighCoefficient = reileigh - (1.0* (1.0-sunfade));\n\n  vec3 sunDirection = normalize(sunPosition);\n\n  float sunE = sunIntensity(dot(sunDirection, up));\n\n  // extinction (absorbtion + out scattering)\n  // rayleigh coefficients\n\n  vec3 betaR = simplifiedRayleigh() * reileighCoefficient;\n\n  // mie coefficients\n  vec3 betaM = totalMie(lambda, K, turbidity) * mieCoefficient;\n\n  // optical length\n  // cutoff angle at 90 to avoid singularity in next formula.\n  float zenithAngle = acos(max(0.0, dot(up, normalize(vWorldPosition - cameraPos))));\n  float sR = rayleighZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\n  float sM = mieZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\n\n  // combined extinction factor\n  vec3 Fex = exp(-(betaR * sR + betaM * sM));\n\n  // in scattering\n  float cosTheta = dot(normalize(vWorldPosition - cameraPos), sunDirection);\n\n  float rPhase = rayleighPhase(cosTheta*0.5+0.5);\n  vec3 betaRTheta = betaR * rPhase;\n\n  float mPhase = hgPhase(cosTheta, mieDirectionalG);\n  vec3 betaMTheta = betaM * mPhase;\n\n  vec3 Lin = pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * (1.0 - Fex),vec3(1.5));\n  Lin *= mix(vec3(1.0),pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * Fex,vec3(1.0/2.0)),clamp(pow(1.0-dot(up, sunDirection),5.0),0.0,1.0));\n\n  //nightsky\n  vec3 direction = normalize(vWorldPosition - cameraPos);\n  float theta = acos(direction.y); // elevation --\x3e y-axis, [-pi/2, pi/2]\n  float phi = atan(direction.z, direction.x); // azimuth --\x3e x-axis [-pi/2, pi/2]\n  vec2 uv = vec2(phi, theta) / vec2(2.0*pi, pi) + vec2(0.5, 0.0);\n  // vec3 L0 = texture2D(skySampler, uv).rgb+0.1 * Fex;\n  vec3 L0 = vec3(0.1) * Fex;\n\n  // composition + solar disc\n  float sundisk = smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);\n  L0 += (sunE * 19000.0 * Fex)*sundisk;\n\n  vec3 whiteScale = 1.0/Uncharted2Tonemap(vec3(W));\n\n  vec3 texColor = (Lin+L0);\n  texColor *= 0.04 ;\n  texColor += vec3(0.0,0.001,0.0025)*0.3;\n\n  float g_fMaxLuminance = 1.0;\n  float fLumScaled = 0.1 / luminance;\n  float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (g_fMaxLuminance * g_fMaxLuminance)))) / (1.0 + fLumScaled);\n\n  float ExposureBias = fLumCompressed;\n\n  vec3 curr = Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*texColor);\n  vec3 color = curr*whiteScale;\n\n  vec3 retColor = pow(color,vec3(1.0/(1.2+(1.2*sunfade))));\n\n  gl_FragColor.rgb = retColor;\n\n  gl_FragColor.a = 1.0;\n}\n"}])},function(e,t,n){var o={"./sunSkyFlipped.js":4};function i(e){var t=a(e);return n(t)}function a(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}i.keys=function(){return Object.keys(o)},i.resolve=a,e.exports=i,i.id=3},function(e,t){AFRAME.registerShader("sunSkyFlipped",{schema:{luminance:{default:1,max:0,min:2,is:"uniform"},mieCoefficient:{default:.005,min:0,max:.1,is:"uniform"},mieDirectionalG:{default:.8,min:0,max:1,is:"uniform"},reileigh:{default:1,max:0,min:4,is:"uniform"},sunPosition:{type:"vec3",default:"0 0 -1",is:"uniform"},turbidity:{default:2,max:0,min:20,is:"uniform"}},vertexShader:"\n  varying vec3 vWorldPosition;\n\n  void main() {\n    vec4 worldPosition = modelMatrix * vec4(position, 1.0);\n    // flip the world position rather than touching the nasty color computation math in the fragment shader\n    vWorldPosition = vec3(worldPosition.x, -worldPosition.y, worldPosition.z);\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n",fragmentShader:"\n  uniform sampler2D skySampler;\n  uniform vec3 sunPosition;\n  varying vec3 vWorldPosition;\n\n  vec3 cameraPos = vec3(0., 0., 0.);\n\n  uniform float luminance;\n  uniform float turbidity;\n  uniform float reileigh;\n  uniform float mieCoefficient;\n  uniform float mieDirectionalG;\n\n  // constants for atmospheric scattering\n  const float e = 2.71828182845904523536028747135266249775724709369995957;\n  const float pi = 3.141592653589793238462643383279502884197169;\n\n  const float n = 1.0003; // refractive index of air\n  const float N = 2.545E25; // number of molecules per unit volume for air at\n  // 288.15K and 1013mb (sea level -45 celsius)\n  const float pn = 0.035;  // depolatization factor for standard air\n\n  // wavelength of used primaries, according to preetham\n  const vec3 lambda = vec3(680E-9, 550E-9, 450E-9);\n\n  // mie stuff\n  // K coefficient for the primaries\n  const vec3 K = vec3(0.686, 0.678, 0.666);\n  const float v = 4.0;\n\n  // optical length at zenith for molecules\n  const float rayleighZenithLength = 8.4E3;\n  const float mieZenithLength = 1.25E3;\n  const vec3 up = vec3(0.0, 1.0, 0.0);\n\n  const float EE = 1000.0;\n  const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\n  // 66 arc seconds -> degrees, and the cosine of that\n\n  // earth shadow hack\n  const float cutoffAngle = pi/1.95;\n  const float steepness = 1.5;\n\n  vec3 totalRayleigh(vec3 lambda)\n  {\n    return (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn));\n  }\n\n  // see http://blenderartists.org/forum/showthread.php?321110-Shaders-and-Skybox-madness\n  // A simplied version of the total Rayleigh scattering to works on browsers that use ANGLE\n  vec3 simplifiedRayleigh()\n  {\n    return 0.0005 / vec3(94, 40, 18);\n  }\n\n  float rayleighPhase(float cosTheta)\n  {\n    return (3.0 / (16.0*pi)) * (1.0 + pow(cosTheta, 2.0));\n  }\n\n  vec3 totalMie(vec3 lambda, vec3 K, float T)\n  {\n    float c = (0.2 * T ) * 10E-18;\n    return 0.434 * c * pi * pow((2.0 * pi) / lambda, vec3(v - 2.0)) * K;\n  }\n\n  float hgPhase(float cosTheta, float g)\n  {\n    return (1.0 / (4.0*pi)) * ((1.0 - pow(g, 2.0)) / pow(1.0 - 2.0*g*cosTheta + pow(g, 2.0), 1.5));\n  }\n\n  float sunIntensity(float zenithAngleCos)\n  {\n    return EE * max(0.0, 1.0 - exp(-((cutoffAngle - acos(zenithAngleCos))/steepness)));\n  }\n\n  // Filmic ToneMapping http://filmicgames.com/archives/75\n  float A = 0.15;\n  float B = 0.50;\n  float C = 0.10;\n  float D = 0.20;\n  float E = 0.02;\n  float F = 0.30;\n  float W = 1000.0;\n\n  vec3 Uncharted2Tonemap(vec3 x)\n  {\n    return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n  }\n\n  void main()\n  {\n    float sunfade = 1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);\n\n    float reileighCoefficient = reileigh - (1.0* (1.0-sunfade));\n\n    vec3 sunDirection = normalize(sunPosition);\n\n    float sunE = sunIntensity(dot(sunDirection, up));\n\n    // extinction (absorbtion + out scattering)\n    // rayleigh coefficients\n\n    vec3 betaR = simplifiedRayleigh() * reileighCoefficient;\n\n    // mie coefficients\n    vec3 betaM = totalMie(lambda, K, turbidity) * mieCoefficient;\n\n    // optical length\n    // cutoff angle at 90 to avoid singularity in next formula.\n    float zenithAngle = acos(max(0.0, dot(up, normalize(vWorldPosition - cameraPos))));\n    float sR = rayleighZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\n    float sM = mieZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\n\n    // combined extinction factor\n    vec3 Fex = exp(-(betaR * sR + betaM * sM));\n\n    // in scattering\n    float cosTheta = dot(normalize(vWorldPosition - cameraPos), sunDirection);\n\n    float rPhase = rayleighPhase(cosTheta*0.5+0.5);\n    vec3 betaRTheta = betaR * rPhase;\n\n    float mPhase = hgPhase(cosTheta, mieDirectionalG);\n    vec3 betaMTheta = betaM * mPhase;\n\n    vec3 Lin = pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * (1.0 - Fex),vec3(1.5));\n    Lin *= mix(vec3(1.0),pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * Fex,vec3(1.0/2.0)),clamp(pow(1.0-dot(up, sunDirection),5.0),0.0,1.0));\n\n    //nightsky\n    vec3 direction = normalize(vWorldPosition - cameraPos);\n    float theta = acos(direction.y); // elevation --\x3e y-axis, [-pi/2, pi/2]\n    float phi = atan(direction.z, direction.x); // azimuth --\x3e x-axis [-pi/2, pi/2]\n    vec2 uv = vec2(phi, theta) / vec2(2.0*pi, pi) + vec2(0.5, 0.0);\n    // vec3 L0 = texture2D(skySampler, uv).rgb+0.1 * Fex;\n    vec3 L0 = vec3(0.1) * Fex;\n\n    // composition + solar disc\n    float sundisk = smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);\n    L0 += (sunE * 19000.0 * Fex)*sundisk;\n\n    vec3 whiteScale = 1.0/Uncharted2Tonemap(vec3(W));\n\n    vec3 texColor = (Lin+L0);\n    texColor *= 0.04 ;\n    texColor += vec3(0.0,0.001,0.0025)*0.3;\n\n    float g_fMaxLuminance = 1.0;\n    float fLumScaled = 0.1 / luminance;\n    float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (g_fMaxLuminance * g_fMaxLuminance)))) / (1.0 + fLumScaled);\n\n    float ExposureBias = fLumCompressed;\n\n    vec3 curr = Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*texColor);\n    vec3 color = curr*whiteScale;\n\n    vec3 retColor = pow(color,vec3(1.0/(1.2+(1.2*sunfade))));\n\n    gl_FragColor.rgb = retColor;\n\n    gl_FragColor.a = 1.0;\n  }\n  "})},function(e,t,n){var o={"./detachable.js":6};function i(e){var t=a(e);return n(t)}function a(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}i.keys=function(){return Object.keys(o)},i.resolve=a,e.exports=i,i.id=5},function(e,t){AFRAME.registerComponent("detachable",{schema:{parent:{type:"string"},detached:{default:!1}},init:function(){this.data.parent?this.parentObject=document.querySelector(this.data.parent).object3D:this.parentObject=this.el.object3D.parent,this.scene=this.el.sceneEl.object3D,this.child=this.el.object3D.children[0],this.gameController=this.el.sceneEl.systems["game-controller"];let e=this.parentObject.el.parentElement;e.addEventListener("triggerdown",()=>{this.el.object3D.rotation.y=0,this.el.object3D.updateMatrixWorld(),this.detach(this.el.object3D,this.parentObject,this.scene)}),e.addEventListener("triggerup",()=>{this.attach(this.el.object3D,this.parentObject,this.scene),this.detach(this.child,this.el.object3D,this.scene),this.el.object3D.position.set(0,0,0),this.el.object3D.updateMatrixWorld(),this.attach(this.child,this.el.object3D,this.scene)})},detach:function(e,t,n){e.applyMatrix(t.matrixWorld),t.remove(e),n.add(e)},attach:function(e,t,n){e.applyMatrix((new THREE.Matrix4).getInverse(t.matrixWorld)),n.remove(e),t.add(e)}})},function(e,t){const n=Math.PI/2;AFRAME.registerSystem("game-controller",{init:function(){MIDI.loadPlugin({soundfontUrl:"soundfonts/",instrument:"marimba"}),this.scene=document.querySelector("a-scene"),this.textureLoader=new THREE.TextureLoader,this.textureLoader.crossOrigin="Anonymous",this.staffTextures={treble:this.textureLoader.load("/images/treble_clef_512x512.png"),bass:this.textureLoader.load("/images/bass_clef_512x512.png")};const e=document.getElementById("image-input");e.addEventListener("change",()=>{this.importImage(URL.createObjectURL(e.files[0]))});const t=document.getElementById("url-input");document.getElementById("url-input-button").addEventListener("click",()=>{this.importImage(t.value)}),this.settings={},this.registerSetting("malletBounce",!0),document.addEventListener("trackpadup",()=>{this.setSetting("malletBounce",!this.settings.malletBounce)}),document.addEventListener("bbuttondown",()=>{this.setSetting("malletBounce",!this.settings.malletBounce)}),this.noteDuration=.1,this.keys=[],this.mallets=[],this.images=[],this.musicFlashCard={noteMesh:null,sharpMesh:null,staffMesh:null,component:null,timeout:null,toggleButton:{elem:null,pressedState:0,buttonMesh:null,boundingBox:null}};const n=document.querySelector("#leftHand"),o=document.querySelector("#rightHand");this.registerHand(n),this.registerHand(o);const i=[2.8125,2.625,2.625,2.625,2.625,2.625,2.5,2.5,2.5,2.5,2.5,2.5,2.4375,2.4375,2.4375,2.4375,2.4375,2.375,2.25,2.25,2.25,2.25,2.25,2.25,2.125,2.125,2.125,2,2,2,1.875,1.875,1.875,1.875,1.875,1.875,1.875,1.875,1.875,1.875,1.875,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.625,1.625,1.625,1.625,1.625,1.625,1.625].map(e=>e/39.3701),a=[21.75,21.1875,21.1875,20.6875,20.6875,20.125,19.625,19.625,19.125,19.125,18.6875,18.6875,18.1875,17.75,17.75,17.25,17.25,16.8125,16.375,16.375,15.9375,15.9375,15.4375,15.4375,15,14.625,14.5625,14.25,14.25,13.75,13.375,13.375,13,12.9375,12.625,12.5625,12.25,11.875,11.875,11.4375,11.4375,11.0625,10.75,10.6875,10.375,10.3125,10,10,9.625,9.25,9.25,8.9375,8.9375,8.5625,8.1875,8.1875,7.875,7.875,7.5,7.5,7.1875].map(e=>e/39.3701);let s,r;for(let e=0;e<61;e++){let t,n,o=-1.147,c=i[e],l=a[e],h=a[0]-l;switch(e%12){case 0:case 2:case 4:case 5:case 7:case 9:case 11:t=.802,n=-.004-h/2,0!=e&&(o=s+r/2+.0135+c/2),s=o,r=c;break;case 1:case 3:case 6:case 8:case 10:h=a[1]-l,t=.837,n=h/2-.503,o=s+r/2+.00675}const u=document.createElement("a-box");u.setAttribute("geometry",{height:.023,width:c,depth:l}),u.setAttribute("material",{color:"#481f15"}),u.object3D.position.set(o,t,n),u.dataset.note=e+36,this.scene.appendChild(u),u.addEventListener("loaded",()=>{this.registerKey(u)})}var c=new THREE.Geometry;const l=new THREE.Vector3(1,1,-1);for(var h=0;h<500;h++){var u=new THREE.Vector3;do{u.x=THREE.Math.randFloatSpread(1800),u.y=THREE.Math.randFloat(0,1e3),u.z=THREE.Math.randFloatSpread(1800)}while(u.length()<300||u.angleTo(l)<.2);const e=new THREE.Vector3;e.x=u.x,e.z=u.z,e.y=-1*u.y,c.vertices.push(u),c.vertices.push(e)}var m=new THREE.PointsMaterial({color:16777215}),d=new THREE.Points(c,m);this.scene.object3D.add(d)},createMesh:function(e){return new Promise((t,n)=>{this.textureLoader.load(e,e=>{t(this.createMeshFromTexture(e))},void 0,e=>{console.error("Unable to load image."),n()})})},createMeshFromTexture:function(e){const t=new THREE.MeshBasicMaterial({map:e,transparent:!0}),n=new THREE.PlaneBufferGeometry(e.image.width/2e3,e.image.height/2e3);return new THREE.Mesh(n,t)},importImage:function(e){this.createMesh(e).then(e=>{this.images.push(e),this.scene.object3D.add(e),e.position.y=.9,e.position.z=-.75,e.position.x=0,e.rotation.x=-80*THREE.Math.DEG2RAD})},registerHand:function(e){e.addEventListener("controllerconnected",()=>{setTimeout(()=>{const t=this.mallets.filter(t=>t.handEl==e)[0];t.handEl.components.haptics.gamepad.hapticActuators.length>0&&(t.haptics=t.handEl.components.haptics)},1e3)}),e.addEventListener("gripdown",()=>{const t=this.mallets.filter(t=>t.handEl==e)[0];for(let e=0;e<this.images.length;e++){const n=this.images[e];if((new THREE.Box3).setFromObject(n).intersectsSphere(t.boundingSphere)){this.attach(n,t.handEl.object3D,this.scene.object3D),t.attachedImage=n;break}}}),e.addEventListener("gripup",()=>{const t=this.mallets.filter(t=>t.handEl==e)[0];t.attachedImage&&(this.detach(t.attachedImage,t.handEl.object3D,this.scene.object3D),t.attachedImage=null)}),e.addEventListener("axismove",t=>{const o=this.mallets.filter(t=>t.handEl==e);for(let e of o)if(e.rotationEl.object3D.parent==this.scene.object3D)return;const i=t.detail.axis[1],a=t.detail.axis[0]*Math.abs(t.detail.axis[0])*o[0].xAxisMultiplier;let s=o[0].rotationEl.object3D.rotation.y+.05*a;s=a<0?Math.max(0,s):Math.min(n,s);for(let e of o)e.attachedImage&&e.attachedImage.scale.multiplyScalar(1-i/100),e.rotationEl.object3D.rotation.y=s*e.rotateDirection})},registerKey:function(e){const t={boundingBox:(new THREE.Box3).setFromObject(e.object3D),el:e,state:0,note:e.dataset.note};this.keys.push(t)},registerMallet:function(e,t,n){const o={handEl:e.parentElement.parentElement.parentElement.parentElement,baseEl:e.parentElement.parentElement.parentElement,rotationEl:e.parentElement.parentElement,rotateDirection:t,xAxisMultiplier:n,targetPos:new THREE.Vector3(0,0,0),moveVelocity:new THREE.Vector3(0,0,0),moveState:0,bit:Math.pow(2,this.mallets.length),object3D:e.object3D,radius:e.getAttribute("geometry").radius};o.boundingSphere=new THREE.Sphere(new THREE.Vector3(0,0,0),o.radius),this.mallets.push(o)},registerMusicFlashcard:function(e){let t;this.musicFlashCard.component=e,"treble"===e.clef?t="/images/treble_clef_512x512.png":"bass"===e.clef&&(t="/images/bass_clef_512x512.png"),this.createMesh(t).then(t=>{e.el.object3D.add(t),this.musicFlashCard.staffMesh=t,t.position.y=-.004}),this.createMesh("/images/whole_note.png").then(t=>{this.musicFlashCard.noteMesh=t,e.el.object3D.add(t),t.position.x=.05,t.position.z=1e-4,this.positionNote(t,e.note),this.createMesh("/images/sharp_sign.png").then(e=>{this.musicFlashCard.sharpMesh=e,t.add(e),e.position.x=-.05})});const n=new THREE.Mesh(new THREE.PlaneBufferGeometry(.3,.3),new THREE.MeshBasicMaterial({color:"#FFF"}));e.el.object3D.add(n),e.el.object3D.updateMatrixWorld(),n.position.z=-.005;const o=document.createElement("a-entity");o.setAttribute("text",{value:"Music Note Flashcards",height:1,width:1,anchor:"align"}),e.el.appendChild(o),o.object3D.position.set(-.15,.2,0);const i=document.createElement("a-entity");i.setAttribute("text",{value:"Start",height:1,width:1,anchor:"align",xOffset:-.05}),e.el.appendChild(i),i.object3D.position.x=.25;const a=new THREE.Mesh(new THREE.PlaneBufferGeometry(.2,.2),new THREE.MeshBasicMaterial({color:"#009900",transparent:!0}));e.el.object3D.add(a),e.el.object3D.updateMatrixWorld(),a.position.x=.25,this.musicFlashCard.toggleButton.elem=i,this.musicFlashCard.toggleButton.buttonMesh=a,this.musicFlashCard.toggleButton.boundingBox=(new THREE.Box3).setFromObject(a)},positionNote:function(e,t){const n={treble:[0,0,1,0,1,0,0,1,0,1,0,1],bass:[0,1,0,0,1,0,1,0,1,0,0,1]}[this.musicFlashCard.component.clef],o={treble:[0,1,1,2,2,3,4,4,5,5,6,6],bass:[0,0,1,2,2,3,3,4,4,5,6,6]}[this.musicFlashCard.component.clef],i=t-(71-{treble:0,bass:21}[this.musicFlashCard.component.clef]);let a=Math.floor(Math.abs(i/12));i<0&&(a*=-1);let s=0,r=i%12;r<0&&(r=(r+12)%12,s=7);const c=o[r]-s;if(e.position.y=.019*(7*a+c),this.musicFlashCard.sharpMesh){const e=n[r];this.musicFlashCard.sharpMesh.visible=!!e}},playCurrentFlashcardNote:function(){this.musicFlashCard.staffMesh.material.map=this.staffTextures[this.musicFlashCard.component.clef];const e=this.musicFlashCard.component.note;this.positionNote(this.musicFlashCard.noteMesh,e),MIDI.noteOn(12,e,150,0),MIDI.noteOff(12,e,.75)},tick:function(e,t){const n=this.keys,o=this.musicFlashCard.toggleButton;for(let e of this.mallets){if(0!=e.moveState){const n=e.baseEl.object3D.position,o=e.moveVelocity.clone().multiplyScalar(t).add(n);e.targetPos.distanceTo(o)>=e.targetPos.distanceTo(n)?(n.copy(e.targetPos),e.moveVelocity.normalize().multiplyScalar(-5e-4),e.targetPos.set(0,0,0),e.moveState=(e.moveState+1)%3):n.set(o.x,o.y,o.z)}const i=e.boundingSphere.center.clone();e.object3D.getWorldPosition(e.boundingSphere.center);for(let o=0;o<n.length;o++){const a=n[o];if(a.boundingBox.intersectsSphere(e.boundingSphere)){const n=i.clone().sub(e.boundingSphere.center),o=n.length();if(!(a.state&e.bit)&&(a.state|=e.bit,MIDI.noteOn(12,a.note,5e4*o/t,0),MIDI.noteOff(12,a.note,.75),e.haptics&&e.haptics.pulse(.4,10),this.musicFlashCard.component.isActive)){clearTimeout(this.musicFlashCard.timeout);const e=a.el;this.musicFlashCard.component.note==a.note?(e.setAttribute("material",{color:"#00ff00"}),this.musicFlashCard.timeout=setTimeout(()=>{this.musicFlashCard.component.setRandomNote(),this.playCurrentFlashcardNote()},600)):(e.setAttribute("material",{color:"#ff0000"}),this.musicFlashCard.timeout=setTimeout(()=>{this.playCurrentFlashcardNote()},600)),setTimeout(()=>e.setAttribute("material",{color:"#481f15"}),600)}!this.settings.malletBounce||0!==e.moveState&&2!==e.moveState||(e.targetPos=n,i.y>e.boundingSphere.center.y&&i.y-a.boundingBox.max.y>-.03&&(e.targetPos.set(0,1,0),e.targetPos.applyQuaternion(e.handEl.object3D.quaternion.clone().inverse()),e.moveVelocity=e.targetPos.clone().multiplyScalar(.005),e.targetPos.multiplyScalar(.05+o),e.moveState=1))}else a.state&=~e.bit}if(o.boundingBox)if(o.boundingBox.intersectsSphere(e.boundingSphere))o.pressedState|=e.bit,o.buttonMesh.material.opacity=.5;else{const t=o.pressedState;o.pressedState&=~e.bit,t&&!o.pressedState&&(o.buttonMesh.material.opacity=1,this.musicFlashCard.component.isActive^=1,this.musicFlashCard.component.isActive?(o.buttonMesh.material.color.setRGB(.8,0,0),o.elem.setAttribute("text","value","Stop"),clearTimeout(this.musicFlashCard.timeout),this.musicFlashCard.timeout=setTimeout(()=>{this.musicFlashCard.component.setRandomNote(),this.playCurrentFlashcardNote()},500)):(o.buttonMesh.material.color.setRGB(0,.8,0),o.elem.setAttribute("text","value","Start")))}}},detach:function(e,t,n){e.applyMatrix(t.matrixWorld),t.remove(e),n.add(e)},attach:function(e,t,n){e.applyMatrix((new THREE.Matrix4).getInverse(t.matrixWorld)),n.remove(e),t.add(e)},setSetting:function(e,t){this.settings[e]=t,localStorage.setItem("instrumentSettings",JSON.stringify(this.settings))},registerSetting:function(e,t){const n=localStorage.getItem("instrumentSettings");if(n){const t=JSON.parse(n)[e];this.setSetting(e,t)}else this.setSetting(e,t)}}),AFRAME.registerComponent("music-flashcard",{init:function(){this.clef="treble",this.isActive=0,this.note=77,document.querySelector("a-scene").systems["game-controller"].registerMusicFlashcard(this)},setRandomNote:function(){const e={treble:{min:62,max:81},bass:{min:41,max:60}};this.clef=["treble","bass"][Math.floor(2*Math.random())];const t=e[this.clef].min,n=e[this.clef].max,o=this.note;for(;o==this.note;)this.note=Math.floor(Math.random()*(n-t))+t}}),AFRAME.registerComponent("key",{init:function(){document.querySelector("a-scene").systems["game-controller"].registerKey(this.el)}}),AFRAME.registerComponent("mallet",{schema:{rotateDirection:{type:"int",default:1},xAxisMultiplier:{type:"int",default:1}},init:function(){document.querySelector("a-scene").systems["game-controller"].registerMallet(this.el,this.data.rotateDirection,this.data.xAxisMultiplier)}})}]);